##
# 这是 TribeDB 的配置文件示例
#
# [格式说明]
# “#”井号右边的所有内容，都视为注释，并被忽略
# 配置行将忽略任何空白字符，包括空格，制表符，换页符等等
# ; 分号表示换行（自动将;替换为换行符）
# | 竖线表示不换行，以竖线结尾的一行将会和下一行合并为一行
#   以竖线开始的一行将会和上一行合并为一行
#   也就是说，竖线会删除前后的空格和换行
# 采用以上两个符号，可以把过长的一行拆分为多行，也可以把
# 多行合并在一行方便查看


# [TribeDB]
# [system]

# 主目录
# basedir = /data/tribedb
# 错误日志记录，如果为文件名或相对路径，则加上basedir
# errorlog = error.log



# 数据库配置
# 第一个或者名称为 default 的为默认数据库
# 注意：数据库密码不能包含空格

[database] #方括号中的内容表示配置项目

# 数据库标识  = IP地址, 端口号, 用户名, 密码, USE数据库名称
# db1 = 127.0.0.1, 3306, root, password, dl_fm
# dl_fm

# 配置读写分离时，读库和写库的数据库标识必须相同
# 如果配置只定义读库，或只定义写库，或都不定义
# 则视为没有读写分离

# 表示为读写分离主库，TribeDB 目前仅仅支持“一主多从”模式
master: 

dl_fm = 127.0.0.1, , root, ,dl_fm

test = 127.0.0.1, , root, ,test

db1 = 
| 127.0.0.1, , root, ,dl_fm

slave: #表示为读写分离从库，从库可定义多个

db2 = , , root, , dl_fm2
db2 = , , root, , dl_fm2

# 数据表配置
# 如果不分表并且储存在默认数据库中，则无需定义配置

[table]

dl_fm:
sound = 10w, id

test:

part = 3, id # id 为  



db2:

# 不分表但分库
mytable1; mytable2; mytable3; mytable4;


db1:

# 不分表但分库
mytable

# 分表分库配置：通过id字段增量切分，每10W数据一个表
# id字段可以是自增的主键，也可以是数值类型的字段
# 1m = 100w = 1000k = 1000*1000
mytable2 = 500w, id



